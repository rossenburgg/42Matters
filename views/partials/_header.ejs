<style>
  @media (max-width: 992px) {
    .mobile-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 0 1rem;
      background-color: black; /* Black background */
      height: 56px; /* Adjust height as needed */
      position: sticky; /* Make the header sticky */
      top: 0; /* Stick to the top */
      z-index: 1000; /* Ensure it stays on top of other content */
      color: white; /* White text color */
    }
    .mobile-header .brand-logo {
      display: flex;
      align-items: center;
    }
    .mobile-header .brand-logo img {
      height:70px; /* Adjust logo height as needed */
      margin-right: 10px; /* Space between logo and text */
    }
    .mobile-header .brand-logo .brand-text {
      font-size: 1.5rem; /* Adjust text size as needed */
      color: white; /* White text color */
      position: relative; /* Needed for dripping effect */
      font-family: 'Comic Sans MS', cursive, sans-serif; /* Comic style font */
      text-shadow: 0 0 5px rgba(0,0,0,0.5); /* Add a shadow for more effect */
    }
    .mobile-header .brand-logo .brand-text:before, .mobile-header .brand-logo .brand-text:after {
      content: '';
      position: absolute;
      bottom: -10px; /* Position the drips */
      width: 4px;
      height: 10px;
      background: white; /* Same color as text */
      animation: drip 1s infinite linear;
    }
    .mobile-header .brand-logo .brand-text:after {
      left: 10px; /* Position the second drip */
      animation-delay: 0.5s; /* Delay for second drip */
    }
    @keyframes drip {
      0% {
        transform: translateY(0);
        opacity: 1;
      }
      100% {
        transform: translateY(10px);
        opacity: 0;
      }
    }
    .mobile-header .icon-group {
      display: flex;
      align-items: center;
    }
    .mobile-header .profile-icon {
      display: flex;
      align-items: center;
      justify-content: center;
      width: 40px; /* Adjust width as needed */
      height: 40px; /* Adjust height as needed */
      background-color: #1DB954; /* Spotify green */
      border-radius: 50%; /* Make it round */
      padding: 3px; /* Add padding to create a ring effect */
      margin-left: 10px; /* Space between icons */
      position: relative; /* Needed for dropdown */
      cursor: pointer; /* Make it clickable */
      color: white; /* White text color */
      font-size: 1.2rem; /* Adjust font size as needed */
    }
    .mobile-header .notification-icon {
      margin-left: 10px; /* Space between icons */
      color: white;
      position: relative;
      cursor: pointer;
      font-size: 24px; /* Make the icon bigger */
    }
    .mobile-header .notification-icon .notification-count {
      position: absolute;
      top: -5px;
      right: -5px;
      background-color: red;
      color: white;
      border-radius: 50%;
      padding: 2px 6px;
      font-size: 12px;
    }
    .desktop-header {
      display: none;
    }
  }

  @media (min-width: 993px) {
    .mobile-header {
      display: none;
    }
    .desktop-header {
      display: block;
    }
  }

  /* Make dropdown text white */
  .dropdown-menu .dropdown-item {
    color: white;
    background-color: #343a40; /* Dark background for dropdown items */
  }

  .dropdown-menu .dropdown-item:hover {
    background-color: #495057; /* Slightly lighter background on hover */
  }

  /* Shake animation */
  @keyframes shake {
    0%, 100% { transform: translateX(0); }
    20%, 60% { transform: translateX(-10px); }
    40%, 80% { transform: translateX(10px); }
  }

  .shake {
    animation: shake 0.5s; /* Duration of shake animation */
    animation-iteration-count: infinite; /* Keep shaking */
  }
</style>


<!-- Desktop Header -->
<header class="desktop-header">
  <nav class="navbar navbar-expand-md navbar-dark bg-dark">
    <a class="navbar-brand" href="/">42Matters</a>
    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
      <span class="navbar-toggler-icon"></span>
    </button>
    <div class="collapse navbar-collapse" id="navbarNav">
      <ul class="navbar-nav">
        <li class="nav-item">
          <a class="nav-link" href="/">Home</a>
        </li>
        <% if (session && session.userId) { %>
          <li class="nav-item">
            <a class="nav-link" href="/deposit">Deposit</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/tasks">Tasks</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/history">Transaction History</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/auth/setup2fa">Setup 2FA</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/analytics">Analytics</a>
          </li>
          <% if (isAdmin) { %> <!-- Check if user is an admin -->
            <li class="nav-item">
              <a class="nav-link" href="/admin">Admin Dashboard</a>
            </li>
          <% } %> <!-- End of admin check -->
          
          <li class="nav-item">
            <a class="nav-link" href="/auth/logout">Logout</a>
          </li>
          <li class="nav-item dropdown">
            <a class="nav-link dropdown-toggle" href="#" id="notificationIcon" role="button" data-bs-toggle="dropdown" aria-expanded="false" data-user-id="<%= session.userId %>">
              <i class="bi bi-bell-fill"></i> <span id="notificationCount">0</span>
            </a>
            <ul class="dropdown-menu" aria-labelledby="notificationIcon" id="notificationDropdown">
              <li><a class="dropdown-item" href="#">No notifications</a></li>
            </ul>
          </li>
            <form class="form-inline my-2 my-lg-0">
              <button class="btn btn-outline-success my-2 my-sm-0" type="button" onclick="location.href='/set-light-theme'">Light Theme</button>
              <button class="btn btn-outline-secondary my-2 my-sm-0 ml-2" type="button" onclick="location.href='/set-dark-theme'">Dark Theme</button>
            </form>
        <% } else { %>
          <li class="nav-item">
            <a class="nav-link" href="/auth/login">Login</a>
          </li>
        <% } %>
      </ul>
    </div>
  </nav>
</header>

<!-- Mobile Header -->
<header class="mobile-header">
  <div class="brand-logo">
    <img src="/logo.png" class="mattersLogo" alt="42Matters Logo">
    <span class="brand-text">24Matters</span>
  </div>
  <div class="icon-group">
    <div class="dropdown">
      <div class="profile-icon" id="mobileProfileIcon" data-bs-toggle="dropdown" aria-expanded="false">
        <% if (username) { %>
          <%= username.charAt(0).toUpperCase() %>
        <% } else { %>
          <i class="fas fa-user"></i>
        <% } %>
      </div>
      <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="mobileProfileIcon">
        <li><a class="dropdown-item" href="/profile">Settings</a></li>
        <% if (isAdmin) { %> <!-- Check if user is an admin -->
          <li><a class="dropdown-item" href="/admin">Admin Dashboard</a></li>
        <% } %>
        <li><a class="dropdown-item" href="/auth/logout">Logout</a></li>
      
      </ul>
    </div>
    <div class="notification-icon" id="mobileNotificationIcon">
      <a href="#" id="mobileNotificationIconLink" data-bs-toggle="dropdown" aria-expanded="false" data-user-id="<%= session.userId %>">
        <i class="bi bi-bell-fill" style="color: white;"></i> 
        <span id="mobileNotificationCount" class="notification-count">0</span>
      </a>
      <ul class="dropdown-menu" aria-labelledby="mobileNotificationIconLink" id="mobileNotificationDropdown">
        <li><a class="dropdown-item" href="#">No notifications</a></li>
      </ul>
    </div>
  </div>
</header>


<script src="https://cdn.socket.io/4.7.5/socket.io.min.js" integrity="sha384-2huaZvOR9iDzHqslqwpR87isEmrfxqyWOF7hr7BY6KG0+hVKLoEXMPUJw3ynWuhO" crossorigin="anonymous"></script>
<script>
  document.addEventListener('DOMContentLoaded', function() {
    const socket = io();
    const notificationIcon = document.getElementById('notificationIcon');
    const notificationDropdown = document.getElementById('notificationDropdown');
    const notificationCount = document.getElementById('notificationCount');
    const mobileNotificationIconLink = document.getElementById('mobileNotificationIconLink');
    const mobileNotificationDropdown = document.getElementById('mobileNotificationDropdown');
    const mobileNotificationCount = document.getElementById('mobileNotificationCount');
    const mobileNotificationIcon = document.getElementById('mobileNotificationIcon');
    const mobileNotificationBellIcon = mobileNotificationIcon.querySelector('.bi-bell-fill');
    const mobileProfileIcon = document.getElementById('mobileProfileIcon');
    const userId = notificationIcon ? notificationIcon.getAttribute('data-user-id') : null;

    function updateNotifications(count, notifications) {
      notificationCount.innerText = count;
      mobileNotificationCount.innerText = count;

      if (notifications.length > 0) {
        const notificationItems = notifications.map(notification =>
          `<li><a class="dropdown-item" href="#">${notification.message}</a></li>`
        ).join('');
        notificationDropdown.innerHTML = notificationItems;
        mobileNotificationDropdown.innerHTML = notificationItems;
        mobileNotificationBellIcon.classList.add('shake'); // Add shake animation
      } else {
        notificationDropdown.innerHTML = '<li><a class="dropdown-item" href="#">No notifications</a></li>';
        mobileNotificationDropdown.innerHTML = '<li><a class="dropdown-item" href="#">No notifications</a></li>';
        mobileNotificationBellIcon.classList.remove('shake'); // Remove shake animation if no unread notifications
      }
    }

    if (userId) {
      socket.on('connect', function() {
        socket.emit('register', userId);
      });

      socket.on('notification count', function(count) {
        fetch(`/api/notifications`)
          .then(response => response.json())
          .then(data => {
            console.log('Notifications fetched:', data);
            updateNotifications(count, data.notifications);
          })
          .catch(error => {
            console.error('Error fetching notifications:', error);
            notificationDropdown.innerHTML = '<li><a class="dropdown-item" href="#">Error fetching notifications</a></li>';
            mobileNotificationDropdown.innerHTML = '<li><a class="dropdown-item" href="#">Error fetching notifications</a></li>';
          });
      });

      socket.on('new notification', function(notification) {
        const newNotification = `<li><a class="dropdown-item" href="#">${notification.message}</a></li>`;
        notificationDropdown.innerHTML = newNotification + notificationDropdown.innerHTML;
        mobileNotificationDropdown.innerHTML = newNotification + mobileNotificationDropdown.innerHTML;
        mobileNotificationBellIcon.classList.add('shake'); // Add shake animation for new notification
      });
    }

    notificationIcon.addEventListener('click', function() {
      notificationDropdown.classList.toggle('show');
    });

    mobileNotificationIconLink.addEventListener('click', function() {
      mobileNotificationDropdown.classList.toggle('show');
    });

    mobileProfileIcon.addEventListener('click', function() {
      this.nextElementSibling.classList.toggle('show');
    });
  });
</script>
