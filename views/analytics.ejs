<!DOCTYPE html>
<html lang="en">
<head>
  <%- include('partials/_head.ejs') %>
  <title>Analytics Dashboard - 42Matters</title>
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <link href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/css/toastr.min.css" rel="stylesheet"/>
  <style>
    body {
      background-color: #121212;
      color: #E0E0E0;
      font-family: 'Roboto', sans-serif;
    }
    .container {
      max-width: 1000px;
      margin: 50px auto;
      padding: 20px;
      border-radius: 10px;
      background-color: #1c1c1c;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    }
    h1, h2 {
      color: #1DB954; /* Spotify green */
      text-align: center;
      margin-bottom: 30px;
      font-size: 2em;
      font-weight: bold;
    }
    .btn-primary {
      display: block;
      margin: 20px auto;
      background-color: #1DB954;
      border: none;
      color: #fff;
      padding: 15px 20px;
      font-size: 1.2em;
      border-radius: 10px;
      transition: background-color 0.3s ease, transform 0.3s ease;
      cursor: pointer;
    }
    .btn-primary:hover {
      background-color: #1a9e45;
      transform: scale(1.05);
    }
    canvas {
      background-color: #333;
      border-radius: 10px;
      padding: 20px;
    }
    .table-container {
      overflow-x: auto;
    }
    .table {
      width: 100%;
      margin-top: 20px;
      background-color: #333;
      border-radius: 10px;
      overflow: hidden;
      border-collapse: separate;
      border-spacing: 0;
    }
    .table th, .table td {
      padding: 15px;
      text-align: center;
      border-bottom: 1px solid #444;
      color: #E0E0E0; /* Brighten the text color */
    }
    .table th {
      background-color: #444;
      color: #1DB954;
      font-size: 1.2em;
    }
    .table tbody tr {
      transition: background-color 0.3s ease;
    }
    .table tbody tr:hover {
      background-color: #555; /* Slightly lighter on hover */
    }
    .table tbody tr:last-child td {
      border-bottom: none;
    }
    .table td:first-child,
    .table th:first-child {
      border-top-left-radius: 10px;
    }
    .table td:last-child,
    .table th:last-child {
      border-top-right-radius: 10px;
    }
    .table td:last-child {
      border-bottom-right-radius: 10px;
    }
    .table td:first-child {
      border-bottom-left-radius: 10px;
    }
  </style>
</head>
<body>
  <%- include('partials/_header.ejs') %>
  <div class="container">
    <h1>Analytics Dashboard</h1>
    <canvas id="earningsChart"></canvas>
    <a href="/analytics/download-report" class="btn btn-primary">Download Report</a>
    <h2>Performance Metrics</h2>
    <div class="table-container">
      <table class="table">
        <thead>
          <tr>
            <th>Task Description</th>
            <th>Amount Earned</th>
            <th>Commission</th>
            <th>Status</th>
          </tr>
        </thead>
        <tbody id="taskMetrics"></tbody>
      </table>
    </div>
  </div>
  <%- include('partials/_footer.ejs') %>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/js/toastr.min.js"></script>
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      let earningsChart;

      function renderChart(data) {
        const ctx = document.getElementById('earningsChart').getContext('2d');
        if (earningsChart) {
          earningsChart.destroy(); // Destroy existing chart instance
        }
        earningsChart = new Chart(ctx, {
          type: 'line',
          data: {
            labels: data.labels,
            datasets: [{
              label: 'Earnings Over Time',
              data: data.earnings,
              backgroundColor: 'rgba(29, 185, 84, 0.2)',
              borderColor: '#1DB954',
              borderWidth: 2,
              fill: true,
            }]
          },
          options: {
            scales: {
              x: {
                beginAtZero: true,
                ticks: {
                  color: '#E0E0E0'
                }
              },
              y: {
                beginAtZero: true,
                ticks: {
                  color: '#E0E0E0'
                }
              }
            },
            plugins: {
              legend: {
                display: true,
                labels: {
                  color: '#E0E0E0'
                }
              }
            }
          }
        });
      }

      // Fetch analytics data and render chart
      fetch('/api/analytics/data')
        .then(response => response.json())
        .then(data => {
          console.log('Analytics data:', data); // Debug message

          // Check if data is valid before rendering chart
          if (data.labels && data.labels.length > 0 && data.earnings && data.earnings.length > 0) {
            renderChart(data);
          } else {
            console.error('Invalid data format for Chart.js:', data); // Debug message
            toastr.error('Invalid data format for Chart.js');
          }

          // Populate performance metrics table
          const taskMetrics = document.getElementById('taskMetrics');
          if (data.tasks && data.tasks.length > 0) {
            data.tasks.forEach(task => {
              const row = document.createElement('tr');
              row.innerHTML = `
                <td>${task.description}</td>
                <td>${task.amountEarned} USDT</td>
                <td>${task.commission} USDT</td>
                <td>${task.status}</td>
              `;
              taskMetrics.appendChild(row);
            });
          } else {
            console.error('Invalid data format for task metrics:', data); // Debug message
            toastr.error('Invalid data format for task metrics');
          }
        })
        .catch(error => {
          console.error('Error fetching analytics data:', error);
          toastr.error('Failed to load analytics data');
        });
    });
  </script>
</body>
</html>
